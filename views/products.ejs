<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head') %>
  <body>
    <%- include('partials/nav') %>
    <br /><br /><br />
    <div class="container-fluid py-5">
      <div class="row">
        <!-- Filter Sidebar -->
        <div class="col-lg-3">
          <div
            class="card shadow-sm border-0"
            style="
              background: rgba(255, 255, 255, 0.95);
              backdrop-filter: blur(10px);
            "
          >
            <div class="card-body">
              <h5 class="card-title mb-4" style="color: var(--primary-pink)">
                Filters
              </h5>
              <!-- Price Range -->
              <div class="mb-4">
                <h6 style="color: var(--text-color)">Price Range</h6>
                <div class="range-slider">
                  <input
                    type="range"
                    class="form-range"
                    min="0"
                    max="1000"
                    id="priceRange"
                    style="accent-color: var(--primary-pink)"
                  />
                  <div class="d-flex justify-content-between mt-2">
                    <span style="color: var(--light-text)">0 EGP</span>
                    <span style="color: var(--light-text)">1000 EGP</span>
                  </div>
                </div>
              </div>

              <!-- Categories -->
              <div class="mb-4">
                <h6 style="color: var(--text-color)">Categories</h6>
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="checkbox"
                    value="Hair"
                    id="category1"
                    style="accent-color: var(--primary-pink)"
                  />
                  <label
                    class="form-check-label"
                    for="category1"
                    style="color: var(--text-color)"
                  >
                    Hair
                  </label>
                </div>
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="checkbox"
                    value="Skincare"
                    id="category2"
                    style="accent-color: var(--primary-pink)"
                  />
                  <label
                    class="form-check-label"
                    for="category2"
                    style="color: var(--text-color)"
                  >
                    Skincare
                  </label>
                </div>
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="checkbox"
                    value="Makeup"
                    id="category3"
                    style="accent-color: var(--primary-pink)"
                  />
                  <label
                    class="form-check-label"
                    for="category3"
                    style="color: var(--text-color)"
                  >
                    Makeup
                  </label>
                </div>
                <div class="form-check">
                  <input
                    class="form-check-input"
                    type="checkbox"
                    value="Bath and Body"
                    id="category4"
                    style="accent-color: var(--primary-pink)"
                  />
                  <label
                    class="form-check-label"
                    for="category4"
                    style="color: var(--text-color)"
                  >
                    Bath and Body
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9">
          <!-- Sort and View Options -->
          <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="d-flex align-items-center gap-3">
              <div class="input-group" style="width: 300px">
                <input
                  type="text"
                  id="searchInput"
                  class="form-control border-start-0"
                  placeholder="Search products..."
                />
              </div>
              <label class="me-2" style="color: var(--text-color)"
                >Sort by:</label
              >
              <select
                class="form-select"
                style="width: auto; border-color: var(--primary-pink)"
              >
                <option>Featured</option>
                <option>Price: Low to High</option>
                <option>Price: High to Low</option>
                <option>Newest</option>
              </select>
            </div>
          </div>

          <!-- Products Grid -->
          <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            <% if (products && products.length > 0) { %> <%
            products.forEach(product => { %>
            <div class="col">
              <div
                class="card h-100 border-0 shadow-sm"
                style="
                  background: rgba(255, 255, 255, 0.95);
                  backdrop-filter: blur(10px);
                "
              >
                <img
                  src="<%= product.image || 'https://via.placeholder.com/300' %>"
                  class="card-img-top"
                  alt="<%= product.name %>"
                />
                <div class="card-body">
                  <h5 class="card-title" style="color: var(--text-color)">
                    <%= product.name %>
                  </h5>
                  <p class="card-text" style="color: var(--light-text)">
                    <%= product.category %>
                  </p>
                  <div
                    class="d-flex justify-content-between align-items-center"
                  >
                    <span class="h5 mb-0" style="color: var(--primary-pink)">
                      <%= product.price.toFixed(2) %> EGP
                    </span>
                    <span class="text-muted"
                      >In Stock: <%= product.stock %></span
                    >
                  </div>
                </div>
                <div class="card-footer bg-white border-top-0">
                  <% if (user) { %>
                  <button
                    class="btn btn-custom w-100"
                    onclick="addToCart('<%= product._id %>', '<%= user._id %>')"
                  >
                    Add to Cart
                  </button>
                  <% } else { %>
                  <button
                    class="btn btn-custom w-100"
                    data-bs-toggle="modal"
                    data-bs-target="#loginModal"
                    type="button"
                  >
                    Add to Cart
                  </button>
                  <% } %>
                </div>
              </div>
            </div>
            <% }); %> <% } else { %>
            <div class="col-12 text-center">
              <p class="text-muted">No products found</p>
            </div>
            <% } %>
          </div>

          <!-- Pagination -->
          <% if (totalPages > 1) { %>
          <nav style="text-align: center; margin-top: 20px">
            <ul
              style="
                list-style: none;
                padding: 0;
                display: inline-flex;
                gap: 10px;
              "
            >
              <li>
                <a
                  href="?page=<%= currentPage - 1 %>"
                  style="padding: 8px 12px; text-decoration: none; border: 1px solid #ccc; background-color: <%= currentPage === 1 ? '#eee' : '#fff' %>; color: <%= currentPage === 1 ? '#999' : '#000' %>; pointer-events: <%= currentPage === 1 ? 'none' : 'auto' %>;"
                >
                  Previous
                </a>
              </li>

              <% for (let i = 1; i <= totalPages; i++) { %>
              <li>
                <a
                  href="?page=<%= i %>"
                  style="padding: 8px 12px; text-decoration: none; border: 1px solid #ccc; background-color: <%= currentPage === i ? '#ff69b4' : '#fff' %>; color: <%= currentPage === i ? '#fff' : '#000' %>;"
                >
                  <%= i %>
                </a>
              </li>
              <% } %>

              <li>
                <a
                  href="?page=<%= currentPage + 1 %>"
                  style="padding: 8px 12px; text-decoration: none; border: 1px solid #ccc; background-color: <%= currentPage === totalPages ? '#eee' : '#fff' %>; color: <%= currentPage === totalPages ? '#999' : '#000' %>; pointer-events: <%= currentPage === totalPages ? 'none' : 'auto' %>;"
                >
                  Next
                </a>
              </li>
            </ul>
          </nav>
          <% } %>
        </div>
      </div>
    </div>

    <style>
      .range-slider {
        padding: 0 10px;
      }
      .form-check {
        margin-bottom: 0.5rem;
      }
      .card {
        transition: transform 0.2s;
      }
      .card:hover {
        transform: translateY(-5px);
      }
      .btn-group .btn {
        padding: 0.375rem 0.75rem;
      }
      .form-select:focus {
        border-color: var(--primary-pink);
        box-shadow: 0 0 0 0.25rem rgba(255, 105, 180, 0.25);
      }
      .page-link:hover {
        color: var(--primary-pink);
        background-color: rgba(255, 105, 180, 0.1);
      }
      .card-img-top {
        width: 100%;
        height: 250px;
        object-fit: contain;
      }
    </style>

    <script>
      // Filter and Search functionality
      document.addEventListener("DOMContentLoaded", function () {
        const priceRange = document.getElementById("priceRange");
        const categoryCheckboxes = document.querySelectorAll(
          'input[id^="category"]'
        );
        const sortSelect = document.querySelector(".form-select");
        const searchInput = document.getElementById("searchInput");
        const productCards = document.querySelectorAll(".col");

        // Function to filter products
        function filterProducts() {
          const maxPrice = parseFloat(priceRange.value);
          const selectedCategories = Array.from(categoryCheckboxes)
            .filter((cb) => cb.checked)
            .map((cb) => cb.value);
          const searchTerm = searchInput.value.toLowerCase();
          const sortValue = sortSelect.value;

          productCards.forEach((card) => {
            const price = parseFloat(
              card.querySelector(".h5").textContent.replace(" EGP", "")
            );
            const category = card
              .querySelector(".card-text")
              .textContent.trim();
            const name = card
              .querySelector(".card-title")
              .textContent.trim()
              .toLowerCase();

            // Apply filters
            const priceMatch = price <= maxPrice;
            const categoryMatch =
              selectedCategories.length === 0 ||
              selectedCategories.includes(category);
            const searchMatch = name.includes(searchTerm);

            // Show/hide based on filters
            if (priceMatch && categoryMatch && searchMatch) {
              card.style.display = "";
            } else {
              card.style.display = "none";
            }
          });

          // Sort products
          const productGrid = document.querySelector(".row-cols-1");
          const sortedProducts = Array.from(productCards)
            .filter((card) => card.style.display !== "none")
            .sort((a, b) => {
              const priceA = parseFloat(
                a.querySelector(".h5").textContent.replace(" EGP", "")
              );
              const priceB = parseFloat(
                b.querySelector(".h5").textContent.replace(" EGP", "")
              );

              switch (sortValue) {
                case "Price: Low to High":
                  return priceA - priceB;
                case "Price: High to Low":
                  return priceB - priceA;
                case "Newest":
                  return 0; // Since we're already sorted by newest in the backend
                default:
                  return 0;
              }
            });

          // Reorder products in the grid
          sortedProducts.forEach((product) => {
            productGrid.appendChild(product);
          });

          // Update pagination
          updatePagination();
        }

        // Function to update pagination
        function updatePagination() {
          const visibleProducts =
            document.querySelectorAll('.col[style=""]').length;
          const totalPages = Math.ceil(visibleProducts / 9);
          const pagination = document.querySelector(".pagination");

          if (totalPages <= 1) {
            pagination.style.display = "none";
          } else {
            pagination.style.display = "flex";
            // Update pagination numbers
            const pageNumbers = pagination.querySelectorAll(
              ".page-item:not(:first-child):not(:last-child)"
            );
            pageNumbers.forEach((item, index) => {
              if (index < totalPages) {
                item.style.display = "";
                item.querySelector("a").textContent = index + 1;
              } else {
                item.style.display = "none";
              }
            });
          }
        }

        // Event listeners
        priceRange.addEventListener("input", filterProducts);
        categoryCheckboxes.forEach((cb) =>
          cb.addEventListener("change", filterProducts)
        );
        sortSelect.addEventListener("change", filterProducts);
        searchInput.addEventListener("input", filterProducts);

        // Initial filter
        filterProducts();
      });

      // Update addToCart JS function to accept customerId
      async function addToCart(productId, customerId) {
        try {
          const response = await fetch(`/api/carts/${customerId}/add`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ product: productId, quantity: 1 }),
          });

          if (!response.ok) {
            throw new Error("Failed to add to cart");
          }

          const result = await response.json();

          // Show success message
          const toast = document.createElement("div");
          toast.className = "toast position-fixed bottom-0 end-0 m-3";
          toast.setAttribute("role", "alert");
          toast.innerHTML = `
            <div class="toast-header bg-success text-white">
              <strong class="me-auto">Success</strong>
              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
              Product added to cart successfully!
            </div>
          `;
          document.body.appendChild(toast);
          const bsToast = new bootstrap.Toast(toast);
          bsToast.show();

          // Remove toast after it's hidden
          toast.addEventListener("hidden.bs.toast", () => {
            toast.remove();
          });
        } catch (error) {
          console.error("Error adding to cart:", error);

          // Show error message
          const toast = document.createElement("div");
          toast.className = "toast position-fixed bottom-0 end-0 m-3";
          toast.setAttribute("role", "alert");
          toast.innerHTML = `
            <div class="toast-header bg-danger text-white">
              <strong class="me-auto">Error</strong>
              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
              Failed to add product to cart. Please try again.
            </div>
          `;
          document.body.appendChild(toast);
          const bsToast = new bootstrap.Toast(toast);
          bsToast.show();

          // Remove toast after it's hidden
          toast.addEventListener("hidden.bs.toast", () => {
            toast.remove();
          });
        }
      }
    </script>

    <%- include('partials/footer') %>
  </body>
</html>
