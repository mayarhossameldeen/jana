<!-- Cart Offcanvas -->
<div
  class="offcanvas offcanvas-end"
  tabindex="-1"
  id="offcanvasRight"
  aria-labelledby="offcanvasRightLabel"
>
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasRightLabel">Shopping Cart</h5>
    <button
      type="button"
      class="btn-close"
      data-bs-dismiss="offcanvas"
      aria-label="Close"
    ></button>
  </div>
  <div class="offcanvas-body">
    <div class="cart-items">
      <!-- Cart items will be dynamically added here -->
      <div class="empty-cart-message text-center py-4">
        <i class="fas fa-shopping-cart fa-3x mb-3"></i>
        <p>Your cart is empty</p>
      </div>
    </div>
    <div class="cart-summary mt-3">
      <div class="d-flex justify-content-between mb-2">
        <span>Subtotal:</span>
        <span class="cart-subtotal">$0.00</span>
      </div>
      <a
        class="btn btn-primary w-100 border-0"
        href="/checkout"
        style="background-color: var(--primary-pink)"
        >Checkout</a
      >
    </div>
  </div>
</div>

<script>
  // Only run if user is logged in
  <% if (user) { %>
    async function fetchCart() {
      try {
        const response = await fetch('/api/carts/<%= user._id %>');
        if (!response.ok) throw new Error('Failed to fetch cart');
        const cart = await response.json();
        renderCartItems(cart.items || []);
      } catch (err) {
        renderCartItems([]);
      }
    }

    function renderCartItems(items) {
      const cartItemsDiv = document.querySelector('.cart-items');
      const cartBadge = document.querySelector('.cart-badge');
      const subtotalSpan = document.querySelector('.cart-subtotal');
      if (!items.length) {
        cartItemsDiv.innerHTML = `<div class="empty-cart-message text-center py-4">
          <i class='fas fa-shopping-cart fa-3x mb-3'></i>
          <p>Your cart is empty</p>
        </div>`;
        cartBadge.textContent = '0';
        subtotalSpan.textContent = '$0.00';
        return;
      }
      let subtotal = 0;
      cartItemsDiv.innerHTML = items.map(item => {
        const price = item.product.price * item.quantity;
        subtotal += price;
        return `<div class='d-flex align-items-center mb-3'>
          <img src='${item.product.image || 'https://via.placeholder.com/50'}' alt='${item.product.name}' style='width:50px;height:50px;object-fit:cover;margin-right:10px;'>
          <div class='flex-grow-1'>
            <div>${item.product.name}</div>
            <div class='text-muted small d-flex align-items-center gap-2'>
              <button class='btn btn-sm btn-outline-secondary' onclick='changeCartQuantity("${item.product._id}", -1, ${item.quantity})'>-</button>
              <span class='mx-2'>${item.quantity}</span>
              <button class='btn btn-sm btn-outline-secondary' onclick='changeCartQuantity("${item.product._id}", 1, ${item.quantity})'>+</button>
              <span class='ms-2'>x ${item.product.price.toFixed(2)} EGP</span>
            </div>
          </div>
          <div class='fw-bold'>${price.toFixed(2)} EGP</div>
        </div>`;
      }).join('');
      cartBadge.textContent = items.length;
      subtotalSpan.textContent = subtotal.toFixed(2) + ' EGP';
    }

    window.changeCartQuantity = async function(productId, delta, currentQuantity) {
      try {
        if (delta === -1 && currentQuantity === 1) {
          // Remove item from cart
          const response = await fetch(`/api/carts/<%= user._id %>/remove/${productId}`, {
            method: 'DELETE'
          });
          if (!response.ok) throw new Error('Failed to remove item');
          const cart = await response.json();
          renderCartItems(cart.items || []);
        } else {
          // Increment or decrement
          const response = await fetch(`/api/carts/<%= user._id %>/add`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ product: productId, quantity: delta })
          });
          if (!response.ok) throw new Error('Failed to update cart');
          const cart = await response.json();
          renderCartItems(cart.items || []);
        }
      } catch (err) {
        // Optionally show error
      }
    }

    // Fetch cart when offcanvas is shown
    document.addEventListener('DOMContentLoaded', function() {
      const offcanvas = document.getElementById('offcanvasRight');
      offcanvas.addEventListener('show.bs.offcanvas', fetchCart);
    });
  <% } %>
</script>
